
import os
from tkinter import *
from tkinter import filedialog
import tifffile
import numpy as np
import imagej
import scyjava
scyjava.config.add_option('-Xmx6g')  # replace '6g' with the amount of memory Java should have
import matplotlib.pyplot as plt
import matplotlib
matplotlib.use("Qt5Agg")


"""
测试：选择一张variance的enface图，再选择一张LIV的enface图，根据LIV图做mask来计算细胞的平均Norm variance
"""


# tk = Tk(); tk.withdraw(); tk.attributes("-topmost", True); stackFilePath_raw = filedialog.askopenfilename(
#     filetypes=[("", "*.tif")], title='Select a sliced En-face "RAW Variance" image')
# DataId_rawVar = os.path.basename(stackFilePath_raw);   root = os.path.dirname(stackFilePath_raw);  tk.destroy()
#
# tk1 = Tk(); tk1.withdraw(); tk1.attributes("-topmost", True); stackFilePath_LIV = filedialog.askopenfilename(
#     filetypes=[("", "*.tif")], title='Select a sliced En-face "LIV"-colored image')
# DataId_LIVimg = os.path.basename(stackFilePath_LIV);   tk1.destroy();  # root = os.path.dirname(stackFilePath_LIV);
#
#
ij = imagej.init(mode='WindowManager')  # sc.fiji:fiji:2.15.0/1.54f
# jimage = ij.io().open(os.path.normpath(stackFilePath_raw))
# image = ij.py.from_java(jimage)
# ij.py.show(image, cmap='gray')


# macrotest = """
# open("J:/Data_2024/20240913_Jurkat3_IVS800/HV_55hr/pos1/var-1.tif");
# //- - - - -
# run("Color Threshold...");
# // Color Thresholder 2.14.0/1.54f
# // Autogenerated macro, single images only!
# min=newArray(3);
# max=newArray(3);
# filter=newArray(3);
# a=getTitle();
# run("HSB Stack");
# run("Convert Stack to Images");
# selectWindow("Hue");
# rename("0");
# selectWindow("Saturation");
# rename("1");
# selectWindow("Brightness");
# rename("2");
# min[0]=0;
# max[0]=255;
# filter[0]="pass";
# min[1]=0;
# max[1]=255;
# filter[1]="pass";
# min[2]=85;
# max[2]=255;
# filter[2]="pass";
# for (i=0;i<3;i++){
#   selectWindow(""+i);
#   setThreshold(min[i], max[i]);
#   run("Convert to Mask");
#   if (filter[i]=="stop")  run("Invert");
# }
# imageCalculator("AND create", "0","1");
# imageCalculator("AND create", "Result of 0","2");
# for (i=0;i<3;i++){
#   selectWindow(""+i);
#   close();
# }
# selectWindow("Result of 0");
# close();
# selectWindow("Result of Result of 0");
# rename(a);
# //run("Close");
# // Colour Thresholding-------------
#
# open("J:/Data_2024/20240913_Jurkat3_IVS800/HV_55hr/pos1/raw-1.tif");
# selectImage ("raw-1.tif");
# run("Restore Selection")
#
# //selectImage("var-1.tif");
# //close();
# """
# ij.py.run_macro(macrotest)

imp = ij.IJ.openImage("J:/Data_2024/20240913_Jurkat3_IVS800/HV_55hr/pos1/var-1.tif")
# image = ij.py.from_java(imp)  # convert to numpy array (?)
ij.py.show(imp, cmap='gray')

ij.IJ.run(imp, "Color Threshold...", "min=newArray(3); max=newArray(3); filter=newArray(3);a=getTitle();");
# ij.IJ.run("HSB Stack");
# ij.IJ.run("Convert Stack to Images");
# // Color Thresholder 2.14.0/1.54f
# // Autogenerated macro, single images only!

